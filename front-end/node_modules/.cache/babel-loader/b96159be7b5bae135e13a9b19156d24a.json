{"ast":null,"code":"import * as api from '../api/index.js';\nimport { CREATE, UPDATE, DELETE, FETCH_ALL, START_LOADING, FETCH_POST, FETCH_BY_SEARCH } from '../constants/actionTypes.js';\nexport const getPosts = page => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts(page);\n    console.log(data);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    console.log(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: {\n        data\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    console.log(\"berhasil menambahkan\");\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n    console.log(\"berhasil edit data\");\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/Muhammad Sholahuddin/Documents/React-JS/Revisi/Steam-Wash/front-end/src/actions/posts.js"],"names":["api","CREATE","UPDATE","DELETE","FETCH_ALL","START_LOADING","FETCH_POST","FETCH_BY_SEARCH","getPosts","page","dispatch","data","fetchPosts","console","log","type","payload","error","message","getPostsBySearch","searchQuery","fetchPostsBySearch","getPost","id","fetchPost","createPost","post","updatePost","deletePost"],"mappings":"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","sourcesContent":["import * as api from '../api/index.js';\r\nimport { CREATE, UPDATE, DELETE, FETCH_ALL, START_LOADING, FETCH_POST, FETCH_BY_SEARCH } from '../constants/actionTypes.js';\r\n\r\nexport const getPosts = (page) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchPosts(page);\r\n\r\n        console.log(data);\r\n\r\n        dispatch({ type: FETCH_ALL, payload: data });\r\n    } catch (error) {\r\n        console.log(error.message)\r\n    }\r\n};\r\n\r\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n    try {\r\n        const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\r\n\r\n        dispatch({ type: FETCH_BY_SEARCH, payload: data });\r\n        console.log(data);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n} \r\n\r\nexport const getPost = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchPost(id);\r\n\r\n        dispatch({ type: FETCH_POST, payload: { data } });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createPost(post);\r\n\r\n        dispatch({ type: CREATE, payload: data });\r\n        console.log(\"berhasil menambahkan\")\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, post);\r\n\r\n        dispatch({ type: UPDATE, payload: data });\r\n        console.log(\"berhasil edit data\")\r\n    } catch (error) {\r\n        console.log(error.message)\r\n    }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n\r\n        dispatch({ type: DELETE, payload: id });\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}