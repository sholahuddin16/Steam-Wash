{"ast":null,"code":"import { CREATE, UPDATE, DELETE, FETCH_ALL, FETCH_BY_SEARCH, FETCH_POST, START_LOADING, END_LOADING } from \"../constants/actionTypes.js\";\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    posts: []\n  };\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case START_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case END_LOADING:\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: actions.payload.data,\n        currentPage: actions.payload.currentPage,\n        numberOfPages: actions.payload.numberOfPages\n      };\n\n    case FETCH_BY_SEARCH:\n      return { ...state,\n        posts: actions.payload.data\n      };\n\n    case FETCH_POST:\n      return { ...state,\n        post: actions.payload.post\n      };\n\n    case CREATE:\n      return { ...state,\n        posts: [...state.posts, actions.payload]\n      };\n\n    case UPDATE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === actions.payload._id ? actions.payload : post)\n      };\n\n    case DELETE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== actions.payload)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Muhammad Sholahuddin/Documents/React-JS/Revisi/Steam-Wash/front-end/src/reducers/posts.js"],"names":["CREATE","UPDATE","DELETE","FETCH_ALL","FETCH_BY_SEARCH","FETCH_POST","START_LOADING","END_LOADING","state","isLoading","posts","actions","type","payload","data","currentPage","numberOfPages","post","map","_id","filter"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,SAAjC,EAA4CC,eAA5C,EAA6DC,UAA7D,EAAyEC,aAAzE,EAAwFC,WAAxF,QAA2G,6BAA3G;AAEA,gBAAe,YAAqD;AAAA,MAApDC,KAAoD,uEAA5C;AAAEC,IAAAA,SAAS,EAAE,IAAb;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAA4C;AAAA,MAAZC,OAAY;;AAChE,UAAQA,OAAO,CAACC,IAAhB;AACI,SAAKN,aAAL;AACI,aAAO,EAAE,GAAGE,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACJ,SAAKF,WAAL;AACI,aAAO,EAAE,GAAGC,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACJ,SAAKN,SAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHE,QAAAA,KAAK,EAAEC,OAAO,CAACE,OAAR,CAAgBC,IAFpB;AAGHC,QAAAA,WAAW,EAAEJ,OAAO,CAACE,OAAR,CAAgBE,WAH1B;AAIHC,QAAAA,aAAa,EAAEL,OAAO,CAACE,OAAR,CAAgBG;AAJ5B,OAAP;;AAMJ,SAAKZ,eAAL;AACI,aAAO,EAAE,GAAGI,KAAL;AAAYE,QAAAA,KAAK,EAAEC,OAAO,CAACE,OAAR,CAAgBC;AAAnC,OAAP;;AACJ,SAAKT,UAAL;AACI,aAAO,EAAE,GAAGG,KAAL;AAAYS,QAAAA,IAAI,EAAEN,OAAO,CAACE,OAAR,CAAgBI;AAAlC,OAAP;;AACJ,SAAKjB,MAAL;AACI,aAAO,EAAE,GAAGQ,KAAL;AAAYE,QAAAA,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAiBC,OAAO,CAACE,OAAzB;AAAnB,OAAP;;AACJ,SAAKZ,MAAL;AACI,aAAO,EAAE,GAAGO,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IAAWA,IAAI,CAACE,GAAL,KAAaR,OAAO,CAACE,OAAR,CAAgBM,GAA7B,GAAmCR,OAAO,CAACE,OAA3C,GAAqDI,IAAhF;AAAnB,OAAP;;AACJ,SAAKf,MAAL;AACI,aAAO,EAAE,GAAGM,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYU,MAAZ,CAAoBH,IAAD,IAAUA,IAAI,CAACE,GAAL,KAAaR,OAAO,CAACE,OAAlD;AAAnB,OAAP;;AACJ;AACI,aAAOL,KAAP;AAvBR;AAyBH,CA1BD","sourcesContent":["import { CREATE, UPDATE, DELETE, FETCH_ALL, FETCH_BY_SEARCH, FETCH_POST, START_LOADING, END_LOADING } from \"../constants/actionTypes.js\";\r\n\r\nexport default (state = { isLoading: true, posts: [] }, actions) => {\r\n    switch (actions.type) {\r\n        case START_LOADING:\r\n            return { ...state, isLoading: true };\r\n        case END_LOADING:\r\n            return { ...state, isLoading: false };\r\n        case FETCH_ALL:\r\n            return {\r\n                ...state,\r\n                posts: actions.payload.data,\r\n                currentPage: actions.payload.currentPage,\r\n                numberOfPages: actions.payload.numberOfPages,\r\n            };\r\n        case FETCH_BY_SEARCH:\r\n            return { ...state, posts: actions.payload.data };\r\n        case FETCH_POST:\r\n            return { ...state, post: actions.payload.post };\r\n        case CREATE:\r\n            return { ...state, posts: [...state.posts, actions.payload] };\r\n        case UPDATE:\r\n            return { ...state, posts: state.posts.map((post) => (post._id === actions.payload._id ? actions.payload : post)) }\r\n        case DELETE:\r\n            return { ...state, posts: state.posts.filter((post) => post._id !== actions.payload) };\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}