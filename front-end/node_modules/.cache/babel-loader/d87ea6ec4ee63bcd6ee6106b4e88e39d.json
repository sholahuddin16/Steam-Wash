{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammad Sholahuddin\\\\Documents\\\\React-JS\\\\Revisi\\\\Steam-Wash\\\\front-end\\\\src\\\\components\\\\PageTransaksi\\\\pageTransaksi.js\",\n    _s = $RefreshSig$();\n\nimport faker from 'faker';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Avatar, Grid, Typography, TablePagination, TableFooter } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650\n  },\n  tableContainer: {\n    borderRadius: 15,\n    margin: '10px 10px',\n    maxWidth: 950\n  },\n  tableHeaderCell: {\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.getContrastText(theme.palette.primary.dark)\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.getContrastText(theme.palette.primary.light)\n  },\n  name: {\n    fontWeight: 'bold',\n    color: theme.palette.secondary.dark\n  },\n  status: {\n    fontWeight: 'bold',\n    fontSize: '0.75rem',\n    color: 'white',\n    backgroundColor: 'grey',\n    borderRadius: 8,\n    padding: '3px 10px',\n    display: 'inline-block'\n  }\n}));\nlet USERS = [],\n    STATUSES = ['Active', 'Pending', 'Blocked'];\n\nfor (let i = 0; i < 14; i++) {\n  USERS[i] = {\n    name: faker.name.findName(),\n    email: faker.internet.email(),\n    phone: faker.phone.phoneNumber(),\n    jobTitle: faker.name.jobTitle(),\n    company: faker.company.companyName(),\n    joinDate: faker.date.past().toLocaleDateString('en-US'),\n    status: STATUSES[Math.floor(Math.random() * STATUSES.length)]\n  };\n}\n\nconst pageTransaksi = () => {\n  _s();\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    className: classes.tableContainer,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            className: classes.tableHeaderCell,\n            children: \"User Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            className: classes.tableHeaderCell,\n            children: \"Job Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            className: classes.tableHeaderCell,\n            children: \"Joining Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            className: classes.tableHeaderCell,\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: USERS.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                lg: 2,\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  alt: row.name,\n                  src: \".\",\n                  className: classes.avatar\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                lg: 10,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.name,\n                  children: row.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"textSecondary\",\n                  variant: \"body2\",\n                  children: row.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"textSecondary\",\n                  variant: \"body2\",\n                  children: row.phone\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"primary\",\n              variant: \"subtitle2\",\n              children: row.jobTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body2\",\n              children: row.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.joinDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.status,\n              style: {\n                backgroundColor: row.status === 'Active' && 'green' || row.status === 'Pending' && 'blue' || row.status === 'Blocked' && 'orange'\n              },\n              children: row.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, row.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n        children: /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [5, 10, 15],\n          component: \"div\",\n          count: USERS.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onChangePage: handleChangePage,\n          onChangeRowsPerPage: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(pageTransaksi, \"7BftIzpgW+sEagrK3boEUppYm9s=\", false, function () {\n  return [useStyles];\n});\n\nexport default pageTransaksi;","map":{"version":3,"sources":["C:/Users/Muhammad Sholahuddin/Documents/React-JS/Revisi/Steam-Wash/front-end/src/components/PageTransaksi/pageTransaksi.js"],"names":["faker","React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Avatar","Grid","Typography","TablePagination","TableFooter","useStyles","theme","table","minWidth","tableContainer","borderRadius","margin","maxWidth","tableHeaderCell","fontWeight","backgroundColor","palette","primary","dark","color","getContrastText","avatar","light","name","secondary","status","fontSize","padding","display","USERS","STATUSES","i","findName","email","internet","phone","phoneNumber","jobTitle","company","companyName","joinDate","date","past","toLocaleDateString","Math","floor","random","length","pageTransaksi","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","slice","map","row"],"mappings":"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","sourcesContent":["import faker from 'faker';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Avatar,\r\n  Grid,\r\n  Typography,\r\n  TablePagination,\r\n  TableFooter\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  tableContainer: {\r\n    borderRadius: 15,\r\n    margin: '10px 10px',\r\n    maxWidth: 950\r\n  },\r\n  tableHeaderCell: {\r\n    fontWeight: 'bold',\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.getContrastText(theme.palette.primary.dark)\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.primary.light,\r\n    color: theme.palette.getContrastText(theme.palette.primary.light)\r\n  },\r\n  name: {\r\n    fontWeight: 'bold',\r\n    color: theme.palette.secondary.dark\r\n  },\r\n  status: {\r\n    fontWeight: 'bold',\r\n    fontSize: '0.75rem',\r\n    color: 'white',\r\n    backgroundColor: 'grey',\r\n    borderRadius: 8,\r\n    padding: '3px 10px',\r\n    display: 'inline-block'\r\n  }\r\n}));\r\n\r\nlet USERS = [], STATUSES = ['Active', 'Pending', 'Blocked'];\r\nfor (let i = 0; i < 14; i++) {\r\n  USERS[i] = {\r\n    name: faker.name.findName(),\r\n    email: faker.internet.email(),\r\n    phone: faker.phone.phoneNumber(),\r\n    jobTitle: faker.name.jobTitle(),\r\n    company: faker.company.companyName(),\r\n    joinDate: faker.date.past().toLocaleDateString('en-US'),\r\n    status: STATUSES[Math.floor(Math.random() * STATUSES.length)]\r\n  }\r\n}\r\n\r\nconst pageTransaksi = () => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  return (\r\n    <TableContainer component={Paper} className={classes.tableContainer}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell className={classes.tableHeaderCell}>User Info</TableCell>\r\n            <TableCell className={classes.tableHeaderCell}>Job Info</TableCell>\r\n            <TableCell className={classes.tableHeaderCell}>Joining Date</TableCell>\r\n            <TableCell className={classes.tableHeaderCell}>Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {USERS.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell>\r\n                <Grid container>\r\n                  <Grid item lg={2}>\r\n                    <Avatar alt={row.name} src='.' className={classes.avatar} />\r\n                  </Grid>\r\n                  <Grid item lg={10}>\r\n                    <Typography className={classes.name}>{row.name}</Typography>\r\n                    <Typography color=\"textSecondary\" variant=\"body2\">{row.email}</Typography>\r\n                    <Typography color=\"textSecondary\" variant=\"body2\">{row.phone}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography color=\"primary\" variant=\"subtitle2\">{row.jobTitle}</Typography>\r\n                <Typography color=\"textSecondary\" variant=\"body2\">{row.company}</Typography>\r\n              </TableCell>\r\n              <TableCell>{row.joinDate}</TableCell>\r\n              <TableCell>\r\n                <Typography\r\n                  className={classes.status}\r\n                  style={{\r\n                    backgroundColor:\r\n                      ((row.status === 'Active' && 'green') ||\r\n                        (row.status === 'Pending' && 'blue') ||\r\n                        (row.status === 'Blocked' && 'orange'))\r\n                  }}\r\n                >{row.status}</Typography>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 15]}\r\n            component=\"div\"\r\n            count={USERS.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport default pageTransaksi"]},"metadata":{},"sourceType":"module"}